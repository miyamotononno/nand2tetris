// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/Mux8Way16.hdl

/**
 * 8-way 16-bit multiplexor:
 * out = a if sel == 000
 *       b if sel == 001
 *       etc.
 *       h if sel == 111
 */

CHIP Mux8Way16 {
    IN a[16], b[16], c[16], d[16],
       e[16], f[16], g[16], h[16],
       sel[3];
    OUT out[16];

    PARTS:
    Not(in=sel[0], out=nots0);
    Not(in=sel[1], out=nots1);
    Not(in=sel[2], out=nots2);

    And(a=nots1, b=nots0, out=m0); // 00
    And(a=nots1, b=sel[0], out=m1); // 01
    And(a=sel[1], b=nots0, out=m2); // 10
    And(a=sel[1], b=sel[0], out=m3); // 11

    And(a=nots2, b=m0, out=b0); // 000
    And(a=nots2, b=m1, out=b1); // 001
    And(a=nots2, b=m2, out=b2); // 010
    And(a=nots2, b=m3, out=b3); // 011
    And(a=sel[2], b=m0, out=b4); // 100
    And(a=sel[2], b=m1, out=b5); // 101
    And(a=sel[2], b=m2, out=b6); // 110
    And(a=sel[2], b=m3, out=b7); // 111

    Not16(in=a, out=nota);
    And16(a=a, b=nota, out=zero16);

    Mux16(a=zero16, b=a, sel=b0, out=o0);
    Mux16(a=zero16, b=b, sel=b1, out=o1);
    Mux16(a=zero16, b=c, sel=b2, out=o2);
    Mux16(a=zero16, b=d, sel=b3, out=o3);
    Mux16(a=zero16, b=e, sel=b4, out=o4);
    Mux16(a=zero16, b=f, sel=b5, out=o5);
    Mux16(a=zero16, b=g, sel=b6, out=o6);
    Mux16(a=zero16, b=h, sel=b7, out=o7);

    Or16(a=o0, b=o1, out=oo0);
    Or16(a=oo0, b=o2, out=oo1);
    Or16(a=oo1, b=o3, out=oo2);
    Or16(a=oo2, b=o4, out=oo3);
    Or16(a=oo3, b=o5, out=oo4);
    Or16(a=oo4, b=o6, out=oo5);
    Or16(a=oo5, b=o7, out=out);
    
}