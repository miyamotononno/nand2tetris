// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP makeRAM16K { // builtIn版を使う
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux4Way(in=true, sel=address[12..13], a=v0, b=v1, c=v2, d=v3);
    And(a=v0, b=load, out=load0);
    And(a=v1, b=load, out=load1);
    And(a=v2, b=load, out=load2);
    And(a=v3, b=load, out=load3);
    RAM4K(in=in, load=load0, address=address[0..11], out=w0);
    RAM4K(in=in, load=load1, address=address[0..11], out=w1);
    RAM4K(in=in, load=load2, address=address[0..11], out=w2);
    RAM4K(in=in, load=load3, address=address[0..11], out=w3);
    Mux4Way16(a=w0, b=w1, c=w2, d=w3, sel=address[12..13], out=out);
}